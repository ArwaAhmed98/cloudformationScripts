# Infrastructure as Code 
# Exercise solution
# Carlos Rivas February 2021
#_____________________________________________________________
#_____________________________________________________________

Outputs:
  MainVPC:
    Description: A CIRD for the created MainVPC
    Value: !Ref MainVPC
    EXPORT:
      Name: !Sub ${EnvironmentName}-MainVPC
  PublicSubnet1:
    Description: A CIRD for the SUBNET
    Value: !Ref PublicSubnet1
    EXPORT:
      Name: !Sub ${EnvironmentName}-PublicSubnet1
     

#_____________________________________________________________
#_____________________________________________________________

AWSTemplateFormatVersion: "2010-09-09"
Description: Creates the required network infrastructure for Public and Private routing with Internet access
#_____________________________________________________________
#_____________________________________________________________

Parameters:
  PrivateSubnet2:
    Type: String
  PublicSubnet1:
    Type: String
  PrivateSubnet1:
    Type: String
  PublicSubnet2:
    Type: String
  AMItoUse:
    Type: String
  MainVPC:
    Type: String
  EnvironmentName:
    Type: String
#_____________________________________________________________
#_____________________________________________________________
Resources:
#_____________________________________________________________
#_____________________________________________________________

  MainVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref MainVPC
      EnableDnsHostnames: true
      
        
        
#_____________________________________________________________
#_____________________________________________________________

  InternetGW:
    Type: AWS::EC2::InternetGateway
#_____________________________________________________________
#_____________________________________________________________

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MainVPC
      InternetGatewayId: !Ref InternetGW
#_____________________________________________________________
#_____________________________________________________________

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      # Availability zone at your discretion or
      # as a parameter
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1
      MapPublicIpOnLaunch: true
      VpcId: !Ref MainVPC
#_____________________________________________________________
#_____________________________________________________________

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      # Availability zone at your discretion or
      # as a parameter
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet2
      MapPublicIpOnLaunch: true
      VpcId: !Ref MainVPC
#_____________________________________________________________
#_____________________________________________________________

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1
      MapPublicIpOnLaunch: false
      VpcId: !Ref MainVPC
#_____________________________________________________________
#_____________________________________________________________

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet2
      MapPublicIpOnLaunch: false
      VpcId: !Ref MainVPC

#_________________________________________________
#_____________________________________________________________

  NatGateway1: 
      Type: AWS::EC2::NatGateway
      Properties: 
          AllocationId: !GetAtt NatGateway1EIP.AllocationId
          SubnetId: !Ref PublicSubnet1
#_____________________________________________________________ 
  NatGateway2: 
      Type: AWS::EC2::NatGateway
      Properties:
          AllocationId: !GetAtt NatGateway2EIP.AllocationId
          SubnetId: !Ref PublicSubnet2
#_____________________________________________________________
#_____________________________________________________________

NatGateway1EIP:
      Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties: 
          Domain: vpc
#_____________________________________________________________

NatGateway2EIP:
      Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties:
          Domain: vpc
#_____________________________________________________________
#_____________________________________________________________

NatGateway2EIP:
      Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties: 
          Domain: vpc
#_____________________________________________________________
#_____________________________________________________________
PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
        VpcId: !Ref MainVPC
        Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Public Routes

DefaultPublicRoute: 
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties: 
        RouteTableId: !Ref PublicRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref InternetGateway

PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref PublicRouteTable
        SubnetId: !Ref PublicSubnet1

PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref PublicRouteTable
        SubnetId: !Ref PublicSubnet2


PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties: 
        VpcId: !Ref MainVPC
        
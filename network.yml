# Infrastructure as Code 
# Exercise solution
# Carlos Rivas February 2021
#_____________________________________________________________
#_____________________________________________________________

Outputs:
  MainVPC:
    Description: A CIRD for the created MainVPC
    Value: !Ref MainVPCCIDR
    EXPORT:
      Name: !Sub ${EnvironmentName}-MainVPC
  PublicSubnet1:
    Description: A CIRD for the SUBNET
    Value: !Ref Pub1SubnetCIDR
    EXPORT:
      Name: !Sub ${EnvironmentName}-Pub1SubnetCIDR
      #mmkn tb2a !ref L Pub1SubnetCIDR da ?

#_____________________________________________________________
#_____________________________________________________________

AWSTemplateFormatVersion: "2010-09-09"
Description: Creates the required network infrastructure for Public and Private routing with Internet access
#_____________________________________________________________
#_____________________________________________________________

Parameters:
  PrivateSubnet2:
    Type: String
  PublicSubnet1:
    Type: String
  PrivateSubnet1:
    Type: String
  PublicSubnet2:
    Type: String
  AMItoUse:
    Type: String
  MainVPCCIDR:
    Type: String
  EnvironmentName:
    Type: String
#_____________________________________________________________
#_____________________________________________________________
Resources:
#_____________________________________________________________
#_____________________________________________________________

  MainVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCIDR
      EnableDnsHostnames: true
      
        
#_____________________________________________________________
#_____________________________________________________________

  InternetGW:
    Type: AWS::EC2::InternetGateway
#_____________________________________________________________
#_____________________________________________________________

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MainVPC
      InternetGatewayId: !Ref InternetGW
#_____________________________________________________________
#_____________________________________________________________

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      # Availability zone at your discretion or
      # as a parameter
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref Pub1SubnetCIDR
      MapPublicIpOnLaunch: true
      VpcId: !Ref MainVPC
#_____________________________________________________________
#_____________________________________________________________

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      # Availability zone at your discretion or
      # as a parameter
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref Pub2SubnetCIDR
      MapPublicIpOnLaunch: true
      VpcId: !Ref MainVPC
#_____________________________________________________________
#_____________________________________________________________

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref Priv1SubnetCIDR
      MapPublicIpOnLaunch: false
      VpcId: !Ref MainVPC
#_____________________________________________________________
#_____________________________________________________________

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref Priv2SubnetCIDR
      MapPublicIpOnLaunch: false
      VpcId: !Ref MainVPC
#_____________________________________________________________
#_____________________________________________________________ 

  NAT1:
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId:
          Fn::GetAtt:
          - EIP
          - AllocationId
        SubnetId: !Ref PublicSubnet1
#_________________________________________________
#_____________________________________________________________

  NatGateway1: 
      Type: AWS::EC2::NatGateway
      Properties: 
          AllocationId: !GetAtt NatGateway1EIP.AllocationId
          SubnetId: !Ref PublicSubnet1
#_____________________________________________________________ 
  NatGateway2: 
      Type: AWS::EC2::NatGateway
      Properties:
          AllocationId: !GetAtt NatGateway2EIP.AllocationId
          SubnetId: !Ref PublicSubnet2
#_____________________________________________________________
#_____________________________________________________________

NatGateway1EIP:
      Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties: 
          Domain: vpc
#_____________________________________________________________

NatGateway2EIP:
      Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties:
          Domain: vpc
#_____________________________________________________________
#_____________________________________________________________

NatGateway2EIP:
      Type: AWS::EC2::EIP
      DependsOn: InternetGatewayAttachment
      Properties: 
          Domain: vpc
#_____________________________________________________________
#_____________________________________________________________

PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref MainVPC
#_____________________________________________________________
#_____________________________________________________________

PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref MainVPC
  #_____________________________________________________________
  #_____________________________________________________________

AssociatePUBRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
#_____________________________________________________________
#_____________________________________________________________

AssociatePRIVRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1
#_____________________________________________________________
#_____________________________________________________________

PublicInternetRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: PublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: InternetGW
#_____________________________________________________________
#_____________________________________________________________

PrivateInternetOutboundRoute:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: PrivateRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId:
         Ref: NAT
#_____________________________________________________________
#_____________________________________________________________

# IAM Role to allow EC2 Session Manager to access our server
RoleForS3: 
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
              
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
#_____________________________________________________________
#_____________________________________________________________       
PolicyForRole:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: Rolefors3
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - 's3:Get*'
              - 's3:List*'
              - 's3-object-lambda:Get*'
              - 's3-object-lambda:List*'
            Resource: '*'
      Roles:
        - !Ref RoleForS3
#_____________________________________________________________
#_____________________________________________________________
# Instance Profile
ServerInstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Roles: 
        - !Ref RoleForS3
#_____________________________________________________________
#_____________________________________________________________